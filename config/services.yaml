# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
imports:
    - { resource: "@App/Resources/config/WsbBundle/services.yml" }
#    - { resource: "@App/Resources/config/HRBundle/services.yml" }
#    - { resource: "@App/Resources/config/AccountingBundle/services.yml" }
parameters:
    locale: 'en'

services:
#    api.parserLibrary:
#        class: App\Libraries\ParserApi
#        arguments: ["@service_container",'@doctrine.orm.entity_manager']

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Symfony\Component\Security\Core\Encoder\UserPasswordEncoder:
          # redundant thanks to _defaults, but value is overridable on each service
        autowire: true
        # not required, will help in our example
        public: true
        arguments: ["@security.encoder_factory"]
